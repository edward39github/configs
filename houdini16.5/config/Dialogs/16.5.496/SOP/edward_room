// Magic: 5c4ff3b9
// Automatically generated PSI dialog (PSI version 16.5.496)
// Wed Sep  5 03:15:44 2018


f_tmp = FLOAT_FIELD;	// dialog.top.ui

combine.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("combine", "Combine Input") toggle VALUE(combine.val);

    { HSTRETCH }

}

rmpts.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 rmpts.label = PARM_LABEL("Remove Unused Points", "rmpts") WIDTH(1.5);
 PARM(float, 1, "rmpts", none, none) RANGE(0.01,10)
	 LABELREF(rmpts.label) HSTRETCH;

}

precision.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 precision.label = PARM_LABEL("Precision (cm)", "precision") WIDTH(1.5);
 PARM(integer, 1, "precision", none, none) RANGE(1,20)
	LOCK_RANGE_MIN LABELREF(precision.label) HSTRETCH;

}

sepparm3.gad = 

{
    LAYOUT(vertical) HSTRETCH 

    { HEIGHT(0.1) }
    SEPARATOR; 
    { HEIGHT(0.1) }
}

t.gad = ROW
{
   HSTRETCH

   t.label = PARM_LABEL("Translate", "t") WIDTH(1.5);
   PARM(float, 3, "t", none, none, "X,Y,Z")
	RANGE(-1,1)  LABELREF(t.label)
	HSTRETCH;

}
x.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

x.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 

    PARM_LABEL_SIMPLE("Pivot Alignment", "x") WIDTH(1.5);
    { WIDTH(0.09) }

    x.menu;

    {  }

}

y.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 

    y.menu;

    {  }

}

z.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 

    z.menu;

    {  }

}
}	// Template join.bot


sepparm4.gad = 

{
    LAYOUT(vertical) HSTRETCH 

    { HEIGHT(0.1) }
    SEPARATOR; 
    { HEIGHT(0.1) }
}

sizex.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 sizex.label = PARM_LABEL("Size X (m)", "sizex") WIDTH(1.5);
 PARM(float, 1, "sizex", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(sizex.label) HSTRETCH;

}

sizez.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 sizez.label = PARM_LABEL("Size Z (m)", "sizez") WIDTH(1.5);
 PARM(float, 1, "sizez", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(sizez.label) HSTRETCH;

}

sizey.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 sizey.label = PARM_LABEL("Size Y (m)", "sizey") WIDTH(1.5);
 PARM(float, 1, "sizey", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(sizey.label) HSTRETCH;

}

sepparm5.gad = 

{
    LAYOUT(vertical) HSTRETCH 

    { HEIGHT(0.1) }
    SEPARATOR; 
    { HEIGHT(0.1) }
}

selfmerge.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("selfmerge", "Compute Self Merging") toggle VALUE(selfmerge.val);

    { HSTRETCH }

}

sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH 

    { HEIGHT(0.1) }
    SEPARATOR; 
    { HEIGHT(0.1) }
}
wall_on_1.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

wall_on_1.gad = ROW
{
    

    PARM_BUTTON("wall_on_1", " ") toggle VALUE(wall_on_1.val);

    {  }

}

th1.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 th1.label = PARM_LABEL("Wall 1", "th1") ;
 PARM(float, 1, "th1", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(th1.label) HSTRETCH;

}
}	// Template join.bot

wall_on_2.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

wall_on_2.gad = ROW
{
    

    PARM_BUTTON("wall_on_2", " ") toggle VALUE(wall_on_2.val);

    {  }

}

th2.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 th2.label = PARM_LABEL("Wall 2", "th2") ;
 PARM(float, 1, "th2", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(th2.label) HSTRETCH;

}
}	// Template join.bot

wall_on_3.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

wall_on_3.gad = ROW
{
    

    PARM_BUTTON("wall_on_3", " ") toggle VALUE(wall_on_3.val);

    {  }

}

th3.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 th3.label = PARM_LABEL("Wall 3", "th3") ;
 PARM(float, 1, "th3", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(th3.label) HSTRETCH;

}
}	// Template join.bot

wall_on_4.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

wall_on_4.gad = ROW
{
    

    PARM_BUTTON("wall_on_4", " ") toggle VALUE(wall_on_4.val);

    {  }

}

th4.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 th4.label = PARM_LABEL("Wall 4", "th4") ;
 PARM(float, 1, "th4", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(th4.label) HSTRETCH;

}
}	// Template join.bot


sepparm2.gad = 

{
    LAYOUT(vertical) HSTRETCH 

    { HEIGHT(0.1) }
    SEPARATOR; 
    { HEIGHT(0.1) }
}
wall_on_c.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

wall_on_c.gad = ROW
{
    

    PARM_BUTTON("wall_on_c", " ") toggle VALUE(wall_on_c.val);

    {  }

}

thc.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 thc.label = PARM_LABEL("Ceilling", "thc") ;
 PARM(float, 1, "thc", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(thc.label) HSTRETCH;

}
}	// Template join.bot

wall_on_f.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

wall_on_f.gad = ROW
{
    

    PARM_BUTTON("wall_on_f", " ") toggle VALUE(wall_on_f.val);

    {  }

}

thf.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 thf.label = PARM_LABEL("Floor", "thf") ;
 PARM(float, 1, "thf", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(thf.label) HSTRETCH;

}
}	// Template join.bot


wallstyle.gad = 
{
    LAYOUT(vertical) HSTRETCH

    { LOOK(none) SIZE(0, 0.05) }	

    TABDIALOG radio
    { 
	VALUE(wallstyle.gad.val) STRETCH(1,0)

	TAB "Solid"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(2p) SPACING(2p)
	    sepparm5.gad;		
	    selfmerge.gad;		
	    sepparm.gad;		
	    wall_on_1.row.join;		
	    wall_on_2.row.join;		
	    wall_on_3.row.join;		
	    wall_on_4.row.join;		
	    sepparm2.gad;		
	    wall_on_c.row.join;		
	    wall_on_f.row.join;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Surface"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(2p) SPACING(2p)

	    { STRETCH(1,1) LOOK(plain) }
	}
    } 
}

folder0.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG
    { 
	VALUE(folder0.gad.val) STRETCH(1,0)

	TAB "Size"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    precision.gad;		
	    sepparm3.gad;		
	    t.gad;		
	    x.row.join;		
	    sepparm4.gad;		
	    sizex.gad;		
	    sizez.gad;		
	    sizey.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH LOOK(plain) 
    combine.gad; 
    rmpts.gad; 
    folder0.gad; 
    wallstyle.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
