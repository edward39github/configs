{"body": [{"indent": 0, "text": ["OpenGL"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Render an image using the hardware-accelerated 3D viewport renderer."]}, {"indent": 0, "type": "para", "text": ["The OpenGL output operator renders the scene using the graphics hardware \npresent on the system. It uses the 3D viewport renderer, but without rendering\nany handles, guides or other decorations. A limited set of display options is\nprovided as parameters. This operator can be used in non-graphical applications,\nsuch as hbatch or hython."]}, {"body": [{"body": [{"indent": 3, "type": "para", "text": ["A GL3.3-capable graphics device must be present on the system in order to\n   render from this output driver."]}], "indent": 0, "role": "item", "type": "note", "text": [" "]}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["Begins the render with the last render control settings. "]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Render"]}, {"body": [{"indent": 8, "type": "para", "text": ["Opens the render control dialog to allow adjustments of the render parameters before rendering. "]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Render Control"]}, {"body": [{"indent": 8, "type": "para", "text": ["Controls whether this render node outputs the current frame (", {"text": ["Render any frame"], "type": "ui"}, ") or the image sequence specified in the ", {"text": ["Start/End/Inc"], "type": "ui"}, " parameters (", {"text": ["Render Frame Range"], "type": "ui"}, ")."]}, {"indent": 8, "type": "para", "text": [{"text": ["Render Frame Range (strict)"], "type": "ui"}, " will render frames start to end when it is rendered, but will not allow frames outside this range to be rendered at all. ", {"text": ["Render Frame Range"], "type": "ui"}, " will allow outside frames to be rendered. This is used in conjunction with render dependencies. It also affects the behavior of the Output Override for Frame Range in the ", {"text": ["Render Control"], "fullpath": "/ref/windows/rendercontrol", "scheme": null, "type": "link", "value": "/ref/windows/rendercontrol"}, " dialog."]}, {"indent": 8, "type": "para", "text": ["Two possible cases where you would want strict behavior:"]}, {"body": [{"indent": 8, "blevel": 10, "type": "bullet", "text": ["A 60 frame walk cycle written out to a geo, but part of a larger ROP net to render out a larger frame range."]}, {"indent": 8, "blevel": 10, "type": "bullet", "text": ["A texture loop from 1-20."]}], "container": true, "type": "bullet_group"}, {"indent": 8, "type": "para", "text": ["Otherwise, you will usually set this to non-strict."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Renders a single frame, based on the value in the playbar or the frame that is requested by a connected output render node."]}], "indent": 8, "type": "dt", "text": ["Render Current Frame"]}, {"body": [{"indent": 12, "type": "para", "text": ["Renders a sequence of frames. If an output render node is connected, this range is generally ignored in favor of frames requested by the output render node."]}], "indent": 8, "type": "dt", "text": ["Render Frame Range"]}, {"body": [{"indent": 12, "type": "para", "text": ["Renders a sequence of frames. If an output render node is connected, this range restricts its requested frames to this frame range."]}], "indent": 8, "type": "dt", "text": ["Render Frame Range (Strict)"]}], "container": true, "type": "dt_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Valid Frame Range"]}, {"body": [{"indent": 8, "type": "para", "text": ["Specifies the range of frames to render (start frame, end frame, and increment). All values may be floating point values. The range is inclusive. "]}, {"body": [{"body": [{"body": [{"indent": 16, "type": "para", "text": ["The number of frames to be rendered by the output driver."]}], "indent": 12, "type": "dt", "text": [{"text": ["$NRENDER"], "type": "code"}]}, {"body": [{"indent": 16, "type": "para", "text": ["The current frame being rendered (starting at 1 and going to ", {"text": ["$NRENDER"], "type": "code"}, ")."]}], "indent": 12, "type": "dt", "text": [{"text": ["$N"], "type": "code"}]}], "container": true, "type": "dt_group"}], "indent": 8, "type": "para", "text": ["These parameters determine the values of the local variables for the output driver."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Start/End/Inc"]}, {"body": [{"indent": 8, "type": "para", "text": ["The output driver will switch to this take before rendering and then restore the current take when rendering is done. Choose ", {"text": ["Current"], "type": "ui"}, " to use the current take when rendering. "]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Render With Take"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Use ", {"text": ["chs(\"take\")"], "type": "code"}, " to use this value in other parameters. See the ", {"text": "", "value": "/expressions/chs", "fallback_text": "chs()", "fullpath": "/expressions/chs", "scheme": "Exp", "type": "link"}, " expression function for more information."]}], "indent": 4, "role": "item", "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["The camera object which defines the scene."]}], "indent": 4, "type": "dt", "text": ["Camera"]}, {"body": [{"indent": 8, "type": "para", "text": ["The root path for the scene. All objects and lights in this object \n        network will be rendered."]}], "indent": 4, "type": "dt", "text": ["Scene Path"]}, {"body": [{"indent": 8, "type": "para", "text": ["Which geometry to render in the object, either the SOP with the display\n        or the render flag set."]}], "indent": 4, "type": "dt", "text": ["SOP Source"]}, {"body": [{"indent": 8, "type": "para", "text": ["Specifies which objects will be rendered in the scene, if their display\n        flags are also set. The paths can be absolute (", {"text": ["\\/obj\\/geo1"], "type": "code"}, ") or relative\n        to the scene path (geo1, with a scene path of ", {"text": ["\\/obj"], "type": "code"}, "). Wildcards can be\n        used (", {"text": ["\\*"], "type": "code"}, ", ", {"text": ["?"], "type": "code"}, "), as can the exclusion operator (", {"text": ["^"], "type": "code"}, "). ", {"text": ["\\* \\^geo?"], "type": "code"}, " would \n        render all objects except for those like ", {"text": ["geo1"], "type": "code"}, ", ", {"text": ["geo2"], "type": "code"}, ", ", {"text": ["geoN"], "type": "code"}, ". "]}], "indent": 4, "type": "dt", "text": ["Candidate Objects"]}, {"body": [{"indent": 8, "type": "para", "text": ["Specifies that the objects that match the names or patterns of this\n        parameter should always appear in the scene, even if\n        their display flag is off."]}, {"body": [{"body": [{"indent": 16, "type": "para", "text": ["This overrides the ", {"text": ["Candidate Objects"], "type": "ui"}, " and ", {"text": ["Exclude Objects"], "type": "ui"}, " parameters."]}], "indent": 8, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "type": "dt", "text": ["Force Objects"]}, {"body": [{"indent": 8, "type": "para", "text": ["Do not include objects in the scene if they match the names or patterns\n        given by this parameter. This overrides both ", {"text": ["Candidate"], "type": "ui"}, " and \n        ", {"text": ["Force Objects"], "type": "ui"}, "."]}], "indent": 4, "type": "dt", "text": ["Exclude Objects"]}, {"body": [{"body": [{"indent": 9, "type": "para", "text": [{"text": ["Candidate Objects"], "type": "ui"}, "."]}], "indent": 8, "type": "para", "text": ["Specifies which lights will be used to light the scene, if they are \n        enabled. The same rules apply to the light mask as"]}], "indent": 4, "type": "dt", "text": ["Candidate Lights"]}, {"body": [{"indent": 8, "type": "para", "text": ["The lights matching the names or patterns of this parameter will always\n        be included, even if they are disabled."]}], "indent": 4, "type": "dt", "text": ["Force Lights"]}, {"body": [{"indent": 8, "type": "para", "text": ["Do not include lights in the scene if they match the names or patterns\n        given by this parameter. This overrides both ", {"text": ["Candidate"], "type": "ui"}, " and \n        ", {"text": ["Force Lights"], "type": "ui"}, "."]}], "indent": 4, "type": "dt", "text": ["Exclude Lights"]}, {"body": [{"indent": 8, "type": "para", "text": ["Forces all simulation OPs to be reset. This includes DOP\n        Networks, POP SOPs, and other OPs that cache their results."]}], "indent": 4, "type": "dt", "text": ["Initialize Simulation OPs"]}, {"body": [{"indent": 8, "type": "para", "text": ["When enabled, this ROP will appear in the viewport\u2019s render menu."]}], "indent": 4, "type": "dt", "text": ["Show in Viewport Menu"]}, {"body": [{"indent": 8, "type": "para", "text": ["Normally, the resolution channels on the camera determine the output \n        resolution. Enabling this parameter allows an alternate resolution to \n        be used."]}], "indent": 4, "type": "dt", "text": ["Override Camera Resolution"]}, {"body": [{"indent": 8, "type": "para", "text": ["Allows you to override the camera resolution."]}], "indent": 4, "type": "dt", "text": ["Resolution"]}, {"body": [{"indent": 8, "type": "para", "text": ["The pixel aspect ratio represents the width of a pixel divided by the \n        height of a pixel. It is not the aspect ratio of the image (which is \n        determined by the resolution of the image).  This parameter does not \n        affect rendering, it is only used to change how images are displayed, \n        by stretching the pixels by this factor."]}], "indent": 4, "type": "dt", "text": ["Pixel Aspect Ratio"]}, {"body": [{"indent": 8, "type": "para", "text": ["Specifies a background image to use, either a file or a COP node \n        reference with op:. The background image is fit to the viewport area\n        if the aspect ratios or size don\u2019t match."]}], "indent": 4, "type": "dt", "text": ["Background Image"]}, {"body": [{"indent": 8, "type": "para", "text": ["Places a comment in the upper left corner of the image, in addition to\n        any viewport comment on the camera."]}], "indent": 4, "type": "dt", "text": ["Viewport Comment"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Scene"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["The image or device where the resulting image will be rendered. You can\n        set this value to ", {"text": ["ip"], "type": "code"}, " which renders the image in MPlay, or you can \n        save it to an image. The following image types are supported: ", {"text": [".pic"], "type": "code"}, ", \n        ", {"text": [".tif"], "type": "code"}, ", ", {"text": [".sgi"], "type": "code"}, ", ", {"text": [".pic.gz"], "type": "code"}, ", ", {"text": [".rat"], "type": "code"}, ", ", {"text": [".jpg"], "type": "code"}, ", ", {"text": [".cin"], "type": "code"}, ", ", {"text": [".rta"], "type": "code"}, ", ", {"text": [".bmp"], "type": "code"}, ", ", {"text": [".tga"], "type": "code"}, ", ", {"text": [".rad"], "type": "code"}, ", ", {"text": [".exr"], "type": "code"}, ", and ", {"text": [".png"], "type": "code"}, "."]}, {"indent": 8, "type": "para", "text": ["Include ", {"text": ["$F"], "type": "code"}, " in the file name to insert the frame number. This is \n        necessary when rendering animation. See ", {"text": ["expressions in file \n        names"], "fullpath": "/render/expressions", "scheme": null, "type": "link", "value": "/render/expressions"}, " for more information."]}], "indent": 4, "type": "dt", "text": ["Output Image"]}, {"body": [{"indent": 8, "type": "para", "text": ["The image format or device for the output image.  If you leave this at\n        the default value of ", {"text": ["Infer from filename"], "type": "ui"}, ", the image format will be\n        selected based on the file extension (eg. ", {"text": [".pic"], "type": "code"}, " will automatically \n        generate a Houdini format image)."]}, {"indent": 8, "type": "para", "text": ["The options inside the box that follows are image format-specific. "]}], "indent": 4, "type": "dt", "text": ["Image Format"]}, {"body": [{"indent": 4, "type": "para", "text": ["Create intermediate parent directories for output files as needed. This currently only applies to generated scripts, images, and shadow maps."]}], "indent": 0, "type": "dt", "attrs": {"id": "soho_mkpath"}, "text": ["Create Intermediate Directories"]}, {"body": [{"indent": 8, "type": "para", "text": ["The number of times the image save will be attempted again\n        before it reports that the save failed."]}], "indent": 4, "type": "dt", "text": ["Save Retries"]}, {"body": [{"indent": 8, "type": "para", "text": ["The type of image to render:"]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Regular 2D RGBA image of the color beauty pass (RGBA)."]}], "indent": 8, "type": "dt", "text": ["Color Image"]}, {"body": [{"indent": 12, "type": "para", "text": ["2D depth image, with depth in camera space (fp32 single channel)."]}], "indent": 8, "type": "dt", "text": ["Depth Image"]}, {"body": [{"indent": 12, "type": "para", "text": ["360 degree render of the beauty pass to a cube map (RGBA)."]}], "indent": 8, "type": "dt", "text": ["360' Cube map"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "text": ["Image Type"]}, {"body": [{"indent": 8, "type": "para", "text": ["Applies gamma correction to output image. This should usually be left\n        at 1.0."]}], "indent": 4, "type": "dt", "text": ["Gamma"]}, {"body": [{"indent": 8, "type": "para", "text": ["Applies a LookUp Table (LUT) to the output image, after gamma is \n        applied."]}], "indent": 4, "type": "dt", "text": ["Display LUT"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Output"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["The capabilities of the graphics hardware and driver may cause some of\n        these options to be disabled."]}], "indent": 4, "role": "item", "type": "note", "text": [" "]}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Enables high-quality rendering by smoothing jagged edges\n        of lines and polygons. Increasing this setting will proportionately \n        increase the amount of framebuffer memory used. 4\u00d7 and 8\u00d7 modes should\n        only be used if the graphics memory installed on the graphics card is\n        1GiB or higher."]}], "indent": 4, "type": "dt", "text": ["Antialias"]}, {"body": [{"indent": 8, "type": "para", "text": ["Enables High Dynamic Range (HDR) rendering which produces higher \n        quality results for volumes and transparency. It can also be used in \n        conjunction with a LUT to view superwhite values. If enabled, 16b \n        or 32b floating point HDR images are rendered. \n        Enabling this option doubles or quadruples the framebuffer size."]}, {"body": [{"body": [{"indent": 11, "type": "para", "text": ["Render using normal dynamic range, black to white, to a 8b \n           framebuffer."]}], "indent": 8, "type": "dt", "text": ["Off"]}], "container": true, "type": "dt_group"}, {"body": [{"indent": 11, "type": "para", "text": ["Render using high dynamic range, to a 16b floating point framebuffer."]}], "indent": 8, "type": "para", "text": ["HDR (16b FP)"]}, {"body": [{"indent": 11, "type": "para", "text": ["Render using high dynamic range, with a 32b floating point\n           framebuffer. This is generally overkill for color, but may be useful\n           for non-color data. "]}], "indent": 8, "type": "para", "text": ["Full HDR (32b FP)"]}], "indent": 4, "type": "dt", "text": ["High Dynamic Range"]}, {"body": [{"indent": 8, "type": "para", "text": ["When the ", {"text": ["Camera"], "type": "ui"}, " is a stereo camera, this determines the type of\n        output image(s)."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["A red/cyan anaglyph image is produced, for use with red/cyan glasses."]}], "indent": 8, "type": "dt", "text": ["Anaglyph"]}, {"body": [{"indent": 12, "type": "para", "text": ["Two images are produced for each frame, one for the left eye and the other for the right."]}], "indent": 8, "type": "dt", "text": ["Separate Left/Right Images"]}, {"body": [{"indent": 12, "type": "para", "text": ["The images for the left and right eyes are placed side by side in the same image, left eye on the left."]}], "indent": 8, "type": "dt", "text": ["Left/Right"]}, {"body": [{"indent": 12, "type": "para", "text": ["The images for the left and right eyes are placed side by side in the same image, left eye on the right."]}], "indent": 8, "type": "dt", "text": ["Right/Left"]}, {"body": [{"indent": 12, "type": "para", "text": ["The images for the left and right eyes are placed one above the other in the same image, left eye on the top."]}], "indent": 8, "type": "dt", "text": ["Over (L)/Under (R)"]}, {"body": [{"indent": 12, "type": "para", "text": ["The images for the left and right eyes are placed one above the other in the same image, left eye on the bottom."]}], "indent": 8, "type": "dt", "text": ["Over (R)/Under (L)"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "text": ["Stereo Mode"]}, {"body": [{"indent": 8, "type": "para", "text": ["Select a ", {"text": ["shading mode"], "fullpath": "/basics/view", "scheme": null, "type": "link", "value": "/basics/view"}, " for all geometry in the scene."]}], "indent": 4, "type": "dt", "text": ["Shading Mode"]}, {"body": [{"indent": 8, "type": "para", "text": ["Materials will include textures if enabled."]}], "indent": 4, "type": "dt", "text": ["Display Textures"]}, {"body": [{"indent": 8, "type": "para", "text": ["Area and environment lights are rendered with more accurate \n        representations. Spotlight falloff and ramp-based attenuation are\n        also incorporated into the shading. This mode attempts to closely match\n        the results seen in mantra at the expense of performance."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["This may disable Antialiasing if the graphics hardware does not support certain OpenGL features. "]}], "indent": 8, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 8, "type": "para", "text": ["This shading does not apply to transparent objects if ", {"text": ["Transparency"], "type": "ui"}, " is enabled. Normal shading is used instead. Additionally, this feature requires ", {"text": ["Material Shaders"], "type": "ui"}, "."]}], "indent": 4, "type": "dt", "text": ["High Quality Light Shading"]}, {"body": [{"indent": 8, "type": "para", "text": ["The number of samples to use when rendering area and environment lights\n        in ", {"text": ["High Quality Light Shading"], "type": "ui"}, " mode. It is ignored when this mode is\n        not active.\n        Higher numbers produce more accurate results, at a slight performance\n        hit."]}], "indent": 4, "type": "dt", "text": ["Light Sampling"]}, {"body": [{"indent": 8, "type": "para", "text": ["Enables light shadowing from those lights which have their \n        ", {"text": ["Shadow Type"], "type": "ui"}, " parameter set to a shadowing method. This option \n        decreases performance and increases graphics memory use but greatly \n        improves the quality of the viewport display."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["The light\u2019s shadow map(s) are re-calculated when its position, \n            orientation or projection changes. You may want to disable shadows\n            while editing a light to improve interactivity."]}], "indent": 8, "role": "item", "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}, {"indent": 8, "type": "para", "text": ["Increasing the shadow quality will improve the shadow\u2019s visualization,\n        especially for area and environment lights, with a corresponding\n        performance decrease."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["All lights are shadowed as if they were point lights, producing\n            hard shadow edges. This is the lowest quality setting."]}], "indent": 8, "type": "dt", "text": ["Point"]}, {"body": [{"indent": 12, "type": "para", "text": ["Improve the shadow edges by softening jagged edges caused by light\n            map aliasing."]}], "indent": 8, "type": "dt", "text": ["Antialiased Point"]}, {"body": [{"indent": 12, "type": "para", "text": ["Area lights use many shadow maps to produce a soft shadow effect. \n            Environment lights perform more sampling. This has no effect on\n            other light types (point will be used in these cases). Moving an\n            area light with this option on will result in slower interactivity."]}], "indent": 8, "type": "dt", "text": ["Area"]}, {"body": [{"indent": 12, "type": "para", "text": ["Soften the jagged edges of shadows, which improves the soft shadow\n            look."]}], "indent": 8, "type": "dt", "text": ["Antialiased Area"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "text": ["Shadows"]}, {"body": [{"indent": 8, "type": "para", "text": ["Controls the resolution of the shadow maps. \n        Increasing the shadow map size will reduce the jaggedness of shadow\n        edges and improve fine shadow detail. Larger maps may affect performance\n        and will use more graphics memory."]}], "indent": 4, "type": "dt", "text": ["Shadow Map Size"]}, {"body": [{"indent": 8, "type": "para", "text": ["Enable screen-space ambient occlusion, which shadows objects based \n        on the amount of ambient light that could reach a surface. Areas in \n        corners and sunken areas will receive shadowing. The numeric value\n        increases the quality and range of effect of the occlusion. Enabling\n        this option will slow performance somewhat. \n        ", {"text": ["High Quality Light Shading"], "type": "ui"}, " and ", {"text": ["Material Shaders"], "type": "ui"}, " are required \n        for occlusion to work."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["The HIP file\u2019s \n            ", {"fragment": "#hipfile", "text": ["Unit Length parameter"], "value": "/ref/windows/mainprefs#hipfile", "fullpath": "/ref/windows/mainprefs#hipfile", "scheme": null, "type": "link"}, " \n            affects how far away the shadowing effect extended. "]}], "indent": 8, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "type": "dt", "text": ["Ambient Occlusion"]}, {"body": [{"indent": 8, "type": "para", "text": ["Draw objects with per-pixel alpha, texture maps with alpha or material \n        transparency using alpha blending (via an over operation). When off, \n        pixels with non-zero alpha are drawn and zero alpha pixels are \n        discarded. The quality of the transparency can also be selected, with \n        the higher quality options impacting performance."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Transparent objects are only sorted by object order. Overlapping\n            surfaces within an object may be rendered incorrectly, unless\n            objects are sorted manually in the scene hierarchy list or a\n            ", {"text": ["Sort SOP"], "fullpath": "/nodes/sop/sort", "scheme": "Node", "type": "link", "value": "/nodes/sop/sort"}, " is used at the end of the object\u2019s\n            geometry chain."]}], "indent": 8, "type": "dt", "text": ["Low"]}, {"body": [{"indent": 12, "type": "para", "text": ["Transparent objects are sorted per-pixel, producing a more \n            realistic display of complex transparent objects."]}], "indent": 8, "type": "dt", "text": ["Medium"]}, {"body": [{"indent": 12, "type": "para", "text": ["Transparent objects are sorted per-pixel and are shadowed, if\n            shadows are enabled. More render passes are used to resolve\n            transparent layering issues, if they are needed."]}], "indent": 8, "type": "dt", "text": ["High"]}], "container": true, "type": "dt_group"}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Medium and High transparency modes require ", {"text": ["Material Shaders"], "type": "ui"}, "."]}], "indent": 8, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "type": "dt", "text": ["Transparency"]}, {"body": [{"indent": 8, "type": "para", "text": ["Enable depth of field effect, based on the camera\u2019s f-stop, aperture,\n        and focus distance. This is done by rendering the scene multiple times\n        while jittering the camera. When enabled, the parameter specifies the\n        number of times the camera is jittered. Higher values produce a better\n        quality image, at the expense of a longer render time."]}], "indent": 4, "type": "dt", "text": ["Depth of Field"]}, {"body": [{"indent": 8, "type": "para", "text": ["Enable a motion blur effect, based on the camera\u2019s shutter. The scene\n        is rendered at multiple subframes around the current frame and blended.\n        When enabled, the parameter specifies the number of subframes to render.\n        Increasing the number of subframes improves the image quality, at the\n        expense of a longer render time."]}], "indent": 4, "type": "dt", "text": ["Motion Blur"]}, {"body": [{"indent": 8, "type": "para", "text": ["Enable displacement mapping for those materials with a GL Displacement\n        Map parameter. The slider field can be used to increase or decrease\n        the tessellation factor of the displaced surface. OpenGL 4.0 is \n        required for this feature."]}], "indent": 4, "type": "dt", "text": ["Displacement"]}, {"body": [{"indent": 8, "type": "para", "text": ["Enable reflections using reflection cubemaps. This simulates reflections\n        by rendering the scene to a cubemap with the reflection object removed,\n        at the reflective object\u2019s centroid. Reflective objects are those with\n        a material with a ", {"text": ["GL Reflect"], "type": "code"}, " parameter that is greater than zero."]}], "indent": 4, "type": "dt", "text": ["Reflections"]}, {"body": [{"indent": 8, "type": "para", "text": ["Require that a material have a ", {"text": ["GL Reflect"], "type": "code"}, " parameter set to at least\n        this value, otherwise do not consider the material reflective. \n        No reflection cubemaps are generated for objects with non-reflective \n        materials. This can reduce the number of reflection maps generated for\n        very dull materials."]}], "indent": 4, "type": "dt", "text": ["Min Reflection"]}, {"body": [{"indent": 8, "type": "para", "text": ["Use a FP16 cubemap to store high-dynamic range reflections. When \n        disabled, an 8b cubemap is used (standard 0-1 color range). HDR \n        reflections look brighter, but use twice the texture memory."]}], "indent": 4, "type": "dt", "text": ["HDR Reflections"]}, {"body": [{"indent": 8, "type": "para", "text": ["Resolution of the cubemap\u2019s square images, in pixels. Larger maps \n        produce sharper reflections at the expense of increased reflection map \n        generation time and texture memory use."]}], "indent": 4, "type": "dt", "text": ["Reflection Map Size"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Display Options"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"body": [{"indent": 12, "type": "para", "text": ["An axis-aligned volume is drawn, with volume slices parallel to one\n            of the volume box\u2019s faces. This is the fastest option but produces\n            a visual pop as the volume is rotated in the view. Overlapping \n            volumes will produce visual artifacts."]}], "indent": 8, "type": "dt", "text": ["Very Low"]}, {"body": [{"indent": 12, "type": "para", "text": ["A view-aligned volume is drawn, with volume slices drawn parallel\n            to the viewport. This produces a higher quality visualization of\n            the volume. Overlapping volumes will render correctly. The slices\n            are widely spaced apart. This is the fastest of the view-aligned\n            options, and is useful for working interactively with dozens of\n            volumes."]}], "indent": 8, "type": "dt", "text": ["Low"]}, {"body": [{"indent": 12, "type": "para", "text": ["A view-aligned volume is drawn, with volume slices packed more \n            densely together. More slices are drawn so the overall render is\n            slower than 'Low'. This option strikes a good balance between \n            quality and performance."]}], "indent": 8, "type": "dt", "text": ["Normal"]}, {"body": [{"indent": 12, "type": "para", "text": ["A view-aligned volume is drawn with slices drawn very densely.\n            This is the slowest but best quality rendering of volumes."]}], "indent": 8, "type": "dt", "text": ["High"]}], "container": true, "type": "dt_group"}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Enabling ", {"text": ["HDR Rendering"], "type": "ui"}, " will remove any banding artifacts from\n            volumes."]}], "indent": 8, "role": "item", "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 4, "type": "dt", "text": ["Volume Quality"]}, {"body": [{"indent": 8, "type": "para", "text": ["Increases or decreases the display resolution of \n        ", {"text": ["Metaballs"], "fullpath": "/nodes/sop/metaball", "scheme": null, "type": "link", "value": "/nodes/sop/metaball"}, ", NURBS, and Bezier surfaces."]}], "indent": 4, "type": "dt", "text": ["Geometry LOD (Level of Detail)"]}, {"body": [{"indent": 8, "type": "para", "text": ["The width, in pixels, of wireframe and wire-over-shaded lines."]}], "indent": 4, "type": "dt", "text": ["Wire Width"]}, {"body": [{"indent": 8, "type": "para", "text": ["The amount that wire-over-shaded lines are blended with the underlying\n        shaded surface. Values near zero make these lines very faint, while\n        a value of one draws the line without any blending (opaque). This does\n        not affect pure wireframe, hidden line, or invisible line modes."]}], "indent": 4, "type": "dt", "text": ["Wire Blend"]}, {"body": [{"indent": 8, "type": "para", "text": ["The particle representation to use:"]}, {"body": [{"body": [{"indent": 11, "type": "para", "text": ["Draw particles as points, affected by the ", {"text": ["Point Size"], "type": "ui"}, ", in screen \n           pixels. They are not affected by perspective."]}], "indent": 8, "type": "dt", "text": ["Point"]}, {"body": [{"indent": 11, "type": "para", "text": ["Each particle is a single pixel. This is useful for visualizing \n           dense flip simulations."]}], "indent": 8, "type": "dt", "text": ["Pixel"]}, {"body": [{"indent": 11, "type": "para", "text": ["Particles are drawn as streaks so it is possible to see their\n           direction."]}], "indent": 8, "type": "dt", "text": ["Lines"]}, {"body": [{"indent": 11, "type": "para", "text": ["Draw particles as discs, affected by the ", {"text": ["Disc Size"], "type": "ui"}, ", in world\n           units. They are affected by perspective."]}], "indent": 8, "type": "dt", "text": ["Discs"]}, {"body": [{"indent": 9, "type": "para", "text": ["In particle disc mode, discs can be oriented to the direction of the \n         normal (", {"text": ["N"], "type": "code"}, ") attribute on the particle. They will face the direction of\n         the normal. Otherwise the discs are drawn screen-aligned so that they\n         face the camera."]}], "indent": 5, "type": "dt", "text": ["Orient Discs to N"]}, {"body": [{"indent": 9, "type": "para", "text": ["Display sprites instead of the current ", {"text": ["Particle"], "type": "ui"}, " representation if\n         a sprite attribute is found, such as ", {"text": ["spriteshop"], "type": "code"}, ", ", {"text": ["spritescale"], "type": "code"}, "\n         or ", {"text": ["spriterot"], "type": "code"}, ". If disabled, these attributes are ignored and the\n         ", {"text": ["Particle"], "type": "ui"}, " representation is always used."]}], "indent": 5, "type": "dt", "text": ["Use Sprites"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "text": ["Particle"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Geometry"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 7, "type": "para", "text": ["Greatly exceeding these limits can cause instability based on your \n       graphics driver and OS platform. Windows in particular can reset the\n       graphics driver if a single draw takes longer than 2 seconds."]}], "indent": 4, "role": "item", "type": "warning"}], "container": true, "role": "item_group", "type": "warning_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Limit 2D Textures (images) to a maximum resolution in one of three ways.\n        Textures are still subject to the ", {"text": ["Tex Mem Limit"], "type": "code"}, " memory limitation for\n        a single texture. If a texture exceeds this limit it will be uniformly \n        downscaled to the limit."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Textures are only limited by the maximum 2D texture resolution \n            reported by OpenGL (usually 8192 or 16384)."]}], "indent": 8, "type": "dt", "text": ["OpenGL Limit"]}, {"body": [{"indent": 12, "type": "para", "text": ["Texture size recommended by Houdini based on the amount of VRAM\n            installed on the graphics hardware."]}], "indent": 8, "type": "dt", "text": ["Auto-Detected Limit"]}, {"body": [{"indent": 12, "type": "para", "text": ["Manually specify the limit using the ", {"text": ["Max 2D Resolution"], "type": "code"}, " parameter."]}], "indent": 8, "type": "dt", "text": ["Specify Limit"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "text": ["Limit 2D Textures"]}, {"body": [{"indent": 8, "type": "para", "text": ["Maximum allowable 2D texture width or height. "]}], "indent": 4, "type": "dt", "text": ["Max 2D Resolution"]}, {"body": [{"indent": 8, "type": "para", "text": ["The maximum allowable bit depth for 2D textures. If a texture\u2019s bit\n        depth exceeds this limit, it will be downcast to the limiting bit depth.\n        If a textures bit depth is less than the limit, it will remain unchanged\n        (ie, not up-converted to the limit bit depth)."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Standard dynamic range (0..255) bit depth. Uses the least amount of\n            memory but super-white values are clamped at white."]}], "indent": 8, "type": "dt", "text": ["8b Fixed"]}, {"body": [{"indent": 12, "type": "para", "text": ["High dynamic range bit depth with reasonable color resolution. A\n            good memory vs. quality setting."]}], "indent": 8, "type": "dt", "text": ["16b FP"]}, {"body": [{"indent": 12, "type": "para", "text": ["Ultra high dynamic range bit depth. Uses twice as much memory as \n            16b FP and has an impact on texture filtering speed. Use with\n            caution."]}], "indent": 8, "type": "dt", "text": ["32b FP"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "text": ["2D Texture Format"]}, {"body": [{"indent": 8, "type": "para", "text": ["Limit 3D Textures (volumes) to a maximum resolution in one of three\n        ways. Textures are still subject to the ", {"text": ["Tex Mem Limit"], "type": "code"}, " memory \n        limitation for a single texture. If a texture exceeds this limit it \n        will be uniformly downscaled to meet the limit."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Textures are only limited by the maximum 3D texture resolution \n            reported by OpenGL (usually 2048 or 8192)."]}], "indent": 8, "type": "dt", "text": ["OpenGL Limit"]}, {"body": [{"indent": 12, "type": "para", "text": ["Texture size recommended by Houdini based on the amount of VRAM\n            installed on the graphics hardware."]}], "indent": 8, "type": "dt", "text": ["Auto-Detected Limit"]}, {"body": [{"indent": 12, "type": "para", "text": ["Manually specify the limit using the ", {"text": ["Max 3D Resolution"], "type": "code"}, " parameter."]}], "indent": 8, "type": "dt", "text": ["Specify Limit"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "text": ["Limit 3D Textures"]}, {"body": [{"indent": 8, "type": "para", "text": ["Maximum allowable 3D texture width or height. "]}], "indent": 4, "type": "dt", "text": ["Max 3D Resolution"]}, {"body": [{"indent": 8, "type": "para", "text": ["The maximum allowable bit depth for 3D textures. If a texture\u2019s bit\n        depth exceeds this limit, it will be downcast to the limiting bit depth.\n        If a textures bit depth is less than the limit, it will remain unchanged\n        (ie, not up-converted to the limit bit depth)."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Standard dynamic range (0..255) bit depth. Uses the least amount of\n            memory but super-white values are clamped at white. Not recommended\n            for volume display."]}], "indent": 8, "type": "dt", "text": ["8b Fixed"]}, {"body": [{"indent": 12, "type": "para", "text": ["High dynamic range bit depth with reasonable color resolution. A\n            good memory vs. quality setting."]}], "indent": 8, "type": "dt", "text": ["16b FP"]}, {"body": [{"indent": 12, "type": "para", "text": ["Ultra high dynamic range bit depth. Uses twice as much memory as \n            16b FP and has an impact on texture filtering speed. Use with\n            caution."]}], "indent": 8, "type": "dt", "text": ["32b FP"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "text": ["3D Texture Format"]}, {"body": [{"indent": 8, "type": "para", "text": ["The maximum allowable texture size for a single texture. If the\n        computed texture size exceeds this limit it will be uniformly \n        downscaled to meet this limit. This applies to both 2D and 3D textures,\n        though it more frequently affects tiled textures (UVTile, UDIM). The\n        total memory size of all textures can exceed this size - it only applies\n        to large textures."]}], "indent": 4, "type": "dt", "text": ["Tex Mem Limit (MB)"]}, {"body": [{"indent": 8, "type": "para", "text": ["The maximum allowable resolution for sprite textures. Sprites larger\n        than this resolution will be downscaled to fit."]}], "indent": 4, "type": "dt", "text": ["Max Sprite Resolution"]}, {"body": [{"indent": 8, "type": "para", "text": ["The percentage of instances shown when ", {"text": ["Point Instancing"], "type": "ui"}, " is enabled.\n        Instances not shown will be replaced by the ", {"text": ["Instancing Standin"], "type": "code"}, "\n        geometry."]}], "indent": 4, "type": "dt", "text": ["Instancing Percent"]}, {"body": [{"indent": 8, "type": "para", "text": ["The maximum number of polygons that can be generated when instancing,\n        in millions of polygons. If a single ", {"text": ["Point Instancing"], "type": "ui"}, " operation\n        exceeds this amount, some of the instances will be replaced by\n        the ", {"text": ["Instancing Standin"], "type": "code"}, " geometry."]}], "indent": 4, "type": "dt", "text": ["Instancing Limit (M)"]}, {"body": [{"indent": 8, "type": "para", "text": ["Geometry to substitute for instances that are culled by either the\n        ", {"text": ["Instancing Percent"], "type": "code"}, " or ", {"text": ["Instancing Limit"], "type": "code"}, " parameters."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Don\u2019t show anything for culled instances."]}], "indent": 8, "type": "dt", "text": ["None"]}, {"body": [{"indent": 12, "type": "para", "text": ["Show a small marker for culled instances at their object position."]}], "indent": 8, "type": "dt", "text": ["Location Marker"]}, {"body": [{"indent": 12, "type": "para", "text": ["Show a wireframe bounding box for culled instances."]}], "indent": 8, "type": "dt", "text": ["Bounding Box"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "text": ["Instancing Stand-in"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Limits"], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "text": ["Each script parameter refers to an hscript command or python script which \nwill be run. Each script parameter has a enable toggle as well as a language\nselection (hscript or python). "]}, {"indent": 0, "type": "para", "text": ["The scripts are always run when rendering occurs. The command checks the \nparameters of the output driver when it is rendering a range or sending output\nto a command."]}, {"indent": 0, "type": "para", "text": ["Before the render occurs, Houdini will automatically set the current hscript \ndirectory to point to the output driver.    "]}, {"body": [{"body": [{"indent": 4, "type": "para", "text": ["This command is run before any rendering is started. It is only run once \n    per render."]}], "indent": 0, "type": "dt", "text": ["Pre-Render Script"]}, {"body": [{"indent": 4, "type": "para", "text": ["This command is run before each frame is rendered."]}], "indent": 0, "type": "dt", "text": ["Pre-Frame Script"]}, {"body": [{"indent": 4, "type": "para", "text": ["This command is run after each frame is rendered."]}], "indent": 0, "type": "dt", "text": ["Post-Frame Script"]}, {"body": [{"indent": 4, "type": "para", "text": ["This command is run one time, after all rendering is complete."]}], "indent": 0, "type": "dt", "text": ["Post-Render Script"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Scripts"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": ["Elements of the scene"], "fullpath": "/basics/intro", "scheme": null, "type": "link", "value": "/basics/intro"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": ["Advanced viewport shading"], "fullpath": "/basics/viewporteffects", "scheme": null, "type": "link", "value": "/basics/viewporteffects"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "title": ["OpenGL"], "summary": ["Render an image using the hardware-accelerated 3D viewport renderer."], "attrs": {"version": null, "namespace": null, "internal": "opengl", "context": "out", "type": "node", "icon": "ROP/opengl"}, "included": ["/nodes/out/standard"], "type": "root"}