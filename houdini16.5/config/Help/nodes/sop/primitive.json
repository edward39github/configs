{"body": [{"indent": 0, "text": ["Primitive"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Edits primitive, primitive attributes, and profile curves."]}, {"indent": 0, "type": "para", "text": ["In Houdini, each geometry primitive has attributes such as XYZ position,\nsize, orientation, color, and alpha."]}, {"indent": 0, "type": "para", "text": ["A Bezier surface is a single primitive, as is a NURBS surface, while a\npolygon mesh can be made of hundreds of individual primitives."]}, {"indent": 0, "type": "para", "text": ["You can use this operator to:"]}, {"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": ["Translate, rotate, and scale primitives."]}, {"body": [{"indent": 2, "type": "para", "text": ["(When transforming profile curves, you can only rotate around the Z\n  axis, since the X and Y axes are projected onto the surface and so\n  cannot rotate off the surface. Similarly, you cannot scale along the Z\n  axis.)"]}], "indent": 0, "blevel": 2, "type": "bullet", "text": ["Apply parametric affine transformations to a profile curve."]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": ["Make primitives open or closed."]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": ["Reverse the vertex order of all faces."]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": ["Reverse surface normals (for example, to map a texture onto the inside\n  of a sphere)."]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": ["Apply transforms per-primitive."]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": ["Set primitive attributes such as color."]}], "container": true, "type": "bullet_group"}, {"body": [{"indent": 4, "type": "para", "text": ["Various options let you modify the input primitives in relation to\n    another piece of geometry. For example, you can match the normals of\n    the input primitives to the normals of the template geometry."]}, {"indent": 4, "type": "para", "text": ["You can use a group within the input primitives as the template\n    geometry (using the ", {"text": ["Template group"], "type": "ui"}, " parameter), or connect the\n    template geometry to this node\u2019s second (Template) input."]}], "indent": 0, "level": 2, "text": ["Template geometry"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"indent": 4, "type": "para", "text": ["The local variables in the Primitive SOP are relative to the\n    primitive. You can use the prefixes \"det\", \"pt\", or \"vtx\" to use\n    detail, point, or vertex variables. For example, ", {"text": ["$ptTX, $ptTY,\n    $ptTZ"], "type": "code"}, " for point coordinates."]}], "indent": 0, "role": "item", "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Primitive and/or profile group to operate on."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Source Group"]}, {"body": [{"indent": 4, "type": "para", "text": ["A subset of template points to transform to."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Template Group"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Transform the input primitives using the parameters below."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Do Transformation"]}, {"body": [{"indent": 4, "type": "para", "text": ["Available when geometry is connected to the second\n    (template) input. Rotates primitives to face template\n    normals. Match Normals"]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Do not match the template."]}], "indent": 4, "type": "dt", "text": ["Off"]}, {"body": [{"indent": 8, "type": "para", "text": ["Rotate primtives to ", {"text": ["face"], "type": "em"}, " the normals of template\n        geometry."]}], "indent": 4, "type": "dt", "text": ["On"]}, {"body": [{"indent": 8, "type": "para", "text": ["Rotate primitive so their normals ", {"text": ["match"], "type": "em"}, " the normals of\n        the template geometry."]}], "indent": 4, "type": "dt", "text": ["Match normals"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Rotate to template"]}, {"body": [{"indent": 4, "type": "para", "text": ["Order in which transformations occur."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Transform Order"]}, {"body": [{"indent": 4, "type": "para", "text": ["Order in which rotations occur."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Rotate Order"]}, {"body": [{"indent": 4, "type": "para", "text": ["Moves primitives along X, Y, and Z axes."]}], "indent": 0, "text": ["Translate"], "role": "item", "attrs": {"channels": "/tx /ty /tz"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Rotates primitives."]}], "indent": 0, "text": ["Rotate"], "role": "item", "attrs": {"channels": "/rx /ry /rz"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Scales primitives along X, Y, and Z axes."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"channels": "/sx /sy /sz"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Amount of shearing. The three values represent X on XY\n    plane, X on XZ plane, and Y on YZ plane respectively."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Shear"]}, {"body": [{"indent": 4, "type": "para", "text": ["Local pivot point for transformations."]}], "indent": 0, "text": ["Pivot"], "role": "item", "attrs": {"channels": "/px /py /pz"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Rotates the input primitives to point at this object."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Lookat Object"]}, {"body": [{"indent": 4, "type": "para", "text": ["Orientation along axes."]}], "indent": 0, "text": ["Up-Vector"], "role": "item", "attrs": {"channels": "/upvectorx /upvectory /upvectorz"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Names of the vector attributes to transform using the\n    parameters above. You can only transform point and primitive\n    vectors can be transformed. You cannot transform vertex\n    attributes."]}, {"indent": 4, "type": "para", "text": ["A value of ", {"text": ["*"], "type": "code"}, " means to transform all known vector\n    attributes. If the field is empty, no attributes are\n    transformed."]}], "indent": 0, "text": ["Vector Attributes to Transform"], "role": "item", "attrs": {"channels": "/xformattribs"}, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Transform"], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "text": ["These attribute changes only apply to primitives, not to\nprofiles."]}, {"body": [{"body": [{"indent": 4, "type": "para", "text": ["Diffuse color (RGB)"]}], "indent": 0, "text": ["Color"], "role": "item", "attrs": {"channels": "/diffr /diffg /diffb"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Transparency value"]}], "indent": 0, "text": ["Alpha"], "role": "item", "attrs": {"channels": "/alpha"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Crease weight for polygonal subdivision"]}], "indent": 0, "text": ["Crease"], "role": "item", "attrs": {"channels": "/crease"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Create a string attribute for texture maps"]}], "indent": 0, "text": ["Texture"], "role": "item", "attrs": {"channels": "/texture"}, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Attributes"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["If clamping or closing rounded, preserves shape."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Preserve Shape U/V"]}, {"body": [{"indent": 4, "type": "para", "text": ["Closes, opens, or unrolls primitive in U direction."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Close U/V"]}, {"body": [{"indent": 4, "type": "para", "text": ["Clamps NURBS endpoints to original positions."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Clamp U/V"]}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["Reverses U for faces, U & V for hulls"]}], "indent": 4, "type": "dt", "text": ["Reverse"]}, {"body": [{"indent": 8, "type": "para", "text": ["Reverses U or V."]}], "indent": 4, "type": "dt", "text": ["Reverse U/V"]}, {"body": [{"indent": 8, "type": "para", "text": ["Interchanges U, V. Preserves topology."]}], "indent": 4, "type": "dt", "text": ["Swap"]}, {"body": [{"indent": 8, "type": "para", "text": ["Cycles vertices by U/V Offset."]}], "indent": 4, "type": "dt", "text": ["Shift"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Operation"]}, {"body": [{"indent": 4, "type": "para", "text": ["Amount to cycle vertices in U direction."]}], "indent": 0, "text": ["U Offset"], "role": "item", "attrs": {"id": "vtxuoff"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Amount to cycle vertices in V direction."]}], "indent": 0, "text": ["V Offset"], "role": "item", "attrs": {"id": "vtxvoff"}, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Face/Hull"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["These options apply only to meta-surfaces."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Overview"]}, {"body": [{"indent": 4, "type": "para", "text": ["Allows meta-surface weighting."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Meta-surface Weight"]}, {"body": [{"indent": 4, "type": "para", "text": ["Weight of meta-surface."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Weight"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Meta"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["These options apply only to particle primitives.  They can\n    be used to override the options usually set by the Render\n    POP."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Overview"]}, {"body": [{"indent": 4, "type": "para", "text": ["Controls if the particle primitive\u2019s render attributes\n    should be overridden."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Particle Render Type"]}, {"body": [{"indent": 4, "type": "para", "text": ["How the particles are rendered."]}, {"indent": 4, "type": "para", "text": ["If you are outputting to RenderMan, use Disk for RiPoint and\n    Line for RiCurve."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Render particles as spheres."]}], "indent": 4, "type": "dt", "text": ["Spheres"]}, {"body": [{"indent": 8, "type": "para", "text": ["Render particles as flat discs oriented toward the camera."]}], "indent": 4, "type": "dt", "text": ["Disks"]}, {"body": [{"indent": 8, "type": "para", "text": ["Render particles as lines between their previous and current\n        positions. This is similar to how particles appear in the 3D\n        viewport."]}], "indent": 4, "type": "dt", "text": ["Lines"]}, {"body": [{"indent": 8, "type": "para", "text": ["Render particles as open tubes between their previous and\n        current positions."]}], "indent": 4, "type": "dt", "text": ["Tubes"]}, {"body": [{"indent": 8, "type": "para", "text": ["Render particles as capped tubes between their previous and\n        current positions."]}], "indent": 4, "type": "dt", "text": ["Capped"]}, {"body": [{"indent": 8, "type": "para", "text": ["Render particles as round-capped tubes between their\n        previous and current positions."]}], "indent": 4, "type": "dt", "text": ["Rounded"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Particle Type"]}, {"body": [{"indent": 4, "type": "para", "text": ["Sets the size of rendered particles. To change particle size for\n    individual particles, use the ", {"text": ["Property POP"], "fullpath": "/nodes/pop/property", "scheme": "Node", "type": "link", "value": "/nodes/pop/property"}, "\n    to set the particle\u2019s scale (", {"text": ["pscale"], "type": "code"}, ") attribute."]}], "indent": 0, "text": ["Particle Size"], "role": "item", "attrs": {"id": "prsize"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["How long the particles will appear when rendered. For end to end\n    connectivity, set this to ", {"text": ["1/$FPS"], "type": "code"}, ". To stretch particles\n    increase this value, or to squash them decrease it."]}], "indent": 0, "text": ["Particle Blur"], "role": "item", "attrs": {"id": "prblur"}, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Particles"], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "text": ["These options only apply to volume primitives.  They can\nadjust certain internal parameters of the volume\nprimitives, such as the behavior when sampled outside\ntheir bounding box or their tolerance for compression."]}, {"indent": 0, "type": "para", "text": ["These options can also apply to VDB primitives where sensible."]}, {"body": [{"body": [{"indent": 4, "type": "para", "text": ["Controls if the visualization options will be changed.\n    This also affects VDB primitives."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Adjust Visualization"]}, {"body": [{"indent": 4, "type": "para", "text": ["How this volume primitive will be displayed in the\n    viewport.  This does not affect the underlying volume at\n    all, just its display-time appearance."]}, {"indent": 4, "type": "para", "text": ["This also affects VDB primitives."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["The volume is rendered as smoke.  Values of 0 or less\n        are fully transparent.  If lights are present, they\n        are self-shadowed with the volume."]}], "indent": 4, "type": "dt", "text": ["Smoke"]}, {"body": [{"indent": 8, "type": "para", "text": ["The volume is rendered as transparent smoke.  Values\n        of 0 or less are fully transparent.  Lights are\n        ignored, reducing computation time.  Instead, the\n        smoke is colored a rainbow hue according to the\n        position in the bounding box."]}], "indent": 4, "type": "dt", "text": ["Rainbow"]}, {"body": [{"indent": 8, "type": "para", "text": ["An isosurface of equal valued voxels is extracted from\n        the volume and displayed.  This Display Isocontour is\n        used to determine which isosurface is extracted."]}], "indent": 4, "type": "dt", "text": ["Isosurface"]}, {"body": [{"indent": 8, "type": "para", "text": ["The contents of the volume are not rendered at all."]}], "indent": 4, "type": "dt", "text": ["Invisible"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Display Mode"]}, {"body": [{"indent": 4, "type": "para", "text": ["Controls the fall off rate for the smoke visualization.\n    Lower values allows the smoke to be more transparent."]}, {"indent": 4, "type": "para", "text": ["This also affects VDB primitives."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Display Density"]}, {"body": [{"indent": 4, "type": "para", "text": ["Which isocontour to extract from the volume.  The default\n    of 0 is good for SDF volumes.  Fog style volumes would\n    work better with something non-zero, such as 0.5."]}, {"indent": 4, "type": "para", "text": ["This also affects VDB primitives."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Display Isocontour"]}, {"body": [{"indent": 4, "type": "para", "text": ["Allows you to override the tapering of the volume along the Z\n    direction.  This allows a volume that better fits a camera\u2019s\n    viewing area, so you can have a greater density of volumes close to\n    the camera than far away."]}, {"indent": 4, "type": "para", "text": ["The X taper can also control VDB primitives that have\n    defined frustums."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Taper"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"indent": 0, "type": "para", "text": ["These options only apply to Volume primitives."]}, {"body": [{"body": [{"indent": 4, "type": "para", "text": ["Controls if the border type will be changed."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Adjust Border"]}, {"body": [{"indent": 4, "type": "para", "text": ["The behavior when the volume is sampled outside of its\n    defined box."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["The border value will be returned."]}], "indent": 4, "type": "dt", "text": ["Constant"]}, {"body": [{"indent": 8, "type": "para", "text": ["The volume will wrap, returning values from the\n        opposite side of the volume."]}], "indent": 4, "type": "dt", "text": ["Repeat"]}, {"body": [{"indent": 8, "type": "para", "text": ["The value at the edge of the volume closest to the\n        sample will be returned."]}], "indent": 4, "type": "dt", "text": ["Streak"]}, {"body": [{"indent": 8, "type": "para", "text": ["The volume will be treated as a signed distance field.\n        The distance from the sample point to the closest\n        point on the volume will be added to the value at that\n        closest point.  This ensures the volume continues to\n        approximate distances outside of its defined box."]}], "indent": 4, "type": "dt", "text": ["SDF"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Border Type"]}, {"body": [{"indent": 4, "type": "para", "text": ["When the border type is constant, this is the value\n    returned for out of bounds sampling."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Border Value"]}, {"body": [{"indent": 4, "type": "para", "text": ["Controls if the compression tolerance will be changed."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Adjust Compression"]}, {"body": [{"indent": 4, "type": "para", "text": ["When tiles in the volume are compressed this will be the\n    tolerance used for lossy compression.  A value of 0 will\n    ensure lossless compression.  (Note compression to\n    constant tiles will still occur)"]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Compression Tolerance"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Volumes"], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "text": ["These options only apply to VDB primitives"]}, {"body": [{"body": [{"indent": 4, "type": "para", "text": ["The semantic meaning of the volume."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["No specific interpretation."]}], "indent": 4, "type": "dt", "text": ["Other"]}, {"body": [{"indent": 8, "type": "para", "text": ["The volume represents a surface."]}], "indent": 4, "type": "dt", "text": ["Level Set"]}, {"body": [{"indent": 8, "type": "para", "text": ["The volume consists of density values (eg. smoke)."]}], "indent": 4, "type": "dt", "text": ["Fog Volume"]}, {"body": [{"indent": 8, "type": "para", "text": ["Volume data for simulation grids."]}], "indent": 4, "type": "dt", "text": ["Staggered Vector Field"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Class"]}, {"body": [{"indent": 4, "type": "para", "text": ["An optional string of the entity responsible for creating the VDB."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Creator"]}, {"body": [{"indent": 4, "type": "para", "text": ["If set, the actual voxel values of the VDB will be altered by transformation operations, when those transformation operations support this."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Transform Values"]}, {"body": [{"indent": 4, "type": "para", "text": ["The semantic meaning of the components of a vector volume.  This affects how transformations are applied."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Does not transform."]}], "indent": 4, "type": "dt", "text": ["Tuple/Colow/UVW"]}, {"body": [{"indent": 8, "type": "para", "text": ["Applies the inverse-transpose of the transform matrix, ignoring translation."]}], "indent": 4, "type": "dt", "text": ["Gradient/Normal"]}, {"body": [{"indent": 8, "type": "para", "text": ["Applies the forward transform matrix, ignoring translation."]}], "indent": 4, "type": "dt", "text": ["Unit Normal"]}, {"body": [{"indent": 8, "type": "para", "text": ["Applies the forward transform matrix, ignoring translation."]}], "indent": 4, "type": "dt", "text": ["Displacement/Velocity/Acceleration"]}, {"body": [{"indent": 8, "type": "para", "text": ["Applies \"regular\" transformation, vector translates."]}], "indent": 4, "type": "dt", "text": ["Position"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Vector Type"], "role": "item", "attrs": {"id": "vdbvectortype"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["A flag to specify that when writing to disk that the volume should be down converted to 16 bit.  This does not affect how it is stored in memory."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Write 16-Bit Floats"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["VDB"], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Volumes"], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Geometry to process."]}], "indent": 0, "type": "dt", "text": ["Primitive(s)"]}, {"body": [{"indent": 4, "type": "para", "text": ["Geometry you can use to control various modifications of the\n    input geometry. For example, you can match the normals of the\n    input primitives to the template geometry. You can also use a\n    group within the input geometry as the template geometry instead\n    of connecting a node to this input."]}], "indent": 0, "type": "dt", "text": ["Template"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Primitive or profile number."]}], "indent": 0, "type": "dt", "text": ["PR"]}, {"body": [{"indent": 4, "type": "para", "text": ["Total number of primitives or profiles."]}], "indent": 0, "type": "dt", "text": ["NPR"]}, {"body": [{"indent": 4, "type": "para", "text": ["Point number of first point in primitive."]}], "indent": 0, "type": "dt", "text": ["PT"]}, {"body": [{"indent": 4, "type": "para", "text": ["The number of vertices in the primitive."]}], "indent": 0, "type": "dt", "text": ["NVTX"]}, {"body": [{"indent": 4, "type": "para", "text": ["Centroid of the primitive or profile."]}], "indent": 0, "type": "dt", "text": ["CEX, CEY, CEZ"]}, {"body": [{"indent": 4, "type": "para", "text": ["Direction from the centroid to the primitive centroid."]}], "indent": 0, "type": "dt", "text": ["DX, DY, DZ"]}, {"body": [{"indent": 4, "type": "para", "text": ["Normal of the primitive."]}], "indent": 0, "type": "dt", "text": ["NX, NY, NZ"]}, {"body": [{"indent": 4, "type": "para", "text": ["Diffuse primitive color & Alpha for primitive."]}], "indent": 0, "type": "dt", "text": ["CR, CG, CB, CA"]}, {"body": [{"indent": 4, "type": "para", "text": ["Crease weight for each edge of primitive"]}], "indent": 0, "type": "dt", "text": ["CREASE"]}, {"body": [{"indent": 4, "type": "para", "text": ["Weight of meta-primitive (0 for non-meta-primitive)"]}], "indent": 0, "type": "dt", "text": ["WEIGHT"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "container": true, "type": "locals_section", "id": "locals"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/ends", "scheme": "Node", "type": "link", "value": "/nodes/sop/ends"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/xform", "scheme": "Node", "type": "link", "value": "/nodes/sop/xform"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/point", "scheme": "Node", "type": "link", "value": "/nodes/sop/point"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/reverse", "scheme": "Node", "type": "link", "value": "/nodes/sop/reverse"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/vertex", "scheme": "Node", "type": "link", "value": "/nodes/sop/vertex"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "summary": ["Edits primitive, primitive attributes, and profile curves."], "type": "root", "attrs": {"version": null, "tags": "tech, attrs, trim", "namespace": null, "internal": "primitive", "context": "sop", "type": "node", "icon": "SOP/primitive"}, "title": ["Primitive"]}