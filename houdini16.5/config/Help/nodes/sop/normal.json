{"body": [{"indent": 0, "text": ["Normal"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Computes surface normal attribute."]}, {"body": [{"indent": 0, "type": "para", "text": ["This node computes point, vertex, primitive, or detail normals using a more accurate approach than the ", {"text": ["Facet node"], "fullpath": "/nodes/sop/facet", "scheme": "Node", "type": "link", "value": "/nodes/sop/facet"}, "\nor the ", {"text": ["Vertex node"], "fullpath": "/nodes/sop/vertex", "scheme": "Node", "type": "link", "value": "/nodes/sop/vertex"}, "."]}, {"indent": 0, "type": "para", "text": ["Unlike the ", {"text": ["Vertex node"], "fullpath": "/nodes/sop/vertex", "scheme": "Node", "type": "link", "value": "/nodes/sop/vertex"}, ", it supports computing vertex normals for polygon soup primitives\nthat were created with a ", {"text": ["PolySoup node"], "fullpath": "/nodes/sop/polysoup", "scheme": "Node", "type": "link", "value": "/nodes/sop/polysoup"}, " having the ", {"text": ["Merge Identical Vertices"], "type": "ui"}, " option disabled.  Existing polygon soup\nprimitives can be passed through a ", {"text": ["PolySoup node"], "fullpath": "/nodes/sop/polysoup", "scheme": "Node", "type": "link", "value": "/nodes/sop/polysoup"}, " with ", {"text": ["Merge Identical Vertices"], "type": "ui"}, " disabled to ensure that vertices are unmerged."]}, {"body": [{"body": [], "indent": 0, "text": ["Edge smoothness"], "role": "item", "attrs": {"id": "116797433"}, "type": "vimeo"}], "container": true, "role": "item_group", "type": "vimeo_group"}], "indent": 0, "level": 2, "text": ["Overview"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["The subset of geometry whose normal attribute, ", {"text": ["N"], "type": "code"}, ", should be modified."]}, {"indent": 4, "type": "para", "text": ["This can be a point, vertex, primitive, or edge group.  If necessary, it will be expanded to a point, vertex, or primitive group, depending on the value of ", {"text": ["Add Normals to"], "type": "ui"}, ".\n    If the input geometry doesn\u2019t have a normal attribute and ", {"text": ["Add Normals to"], "type": "ui"}, " is set to ", {"text": ["Vertices"], "type": "ui"}, ", completely smooth vertex normals, as if Cusp Angle were 180,\n    will be computed over all vertices first, and then normals will be computed for the group as specified.  If the input geometry doesn\u2019t have a normal attribute and\n    ", {"text": ["Add Normals to"], "type": "ui"}, " is set to anything else, this group will be ignored and normals will be computed for all relevant geometry elements."]}], "indent": 0, "text": ["Group"], "role": "item", "attrs": {"id": "group"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["The type of group that ", {"text": ["Group"], "type": "ui"}, " specifies."]}, {"indent": 4, "type": "para", "text": ["If ", {"text": ["Guess from Group"], "type": "ui"}, " is specified and the group type is ambiguous, the guess is made that ", {"text": ["Group"], "type": "ui"}, " specifies a primitive group."]}], "indent": 0, "text": ["Group Type"], "role": "item", "attrs": {"id": "grouptype"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["The type of elements to which to add or modify the normal attribute, ", {"text": ["N"], "type": "code"}, "."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Normals will be computed for each point.  This will be the average of the vertex normals around the point, weighted by the vertex angle for\n        each polygon incident to the points, so that, for example, triangulating the surface won\u2019t change the result."]}], "indent": 4, "type": "dt", "text": ["Points"]}, {"body": [{"indent": 8, "type": "para", "text": ["Normals will be computed for each vertex.  If normals of vertices around a single point are less than ", {"text": ["Cusp Angle"], "type": "ui"}, " apart from each other, they will\n        be averaged together, weighted by the vertex angle in each polygon."]}], "indent": 4, "type": "dt", "text": ["Vertices"]}, {"body": [{"indent": 8, "type": "para", "text": ["Normals will be computed for each primitive."]}], "indent": 4, "type": "dt", "text": ["Primitives"]}, {"body": [{"indent": 8, "type": "para", "text": ["A single normal will be computed for the detail, being the average of the primitive normals, weighted by the primitive area."]}], "indent": 4, "type": "dt", "text": ["Detail"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Add Normals to"], "role": "item", "attrs": {"id": "type"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["When computing vertex normals, if normals of vertices around a single point are less than or equal to this angle (in degrees) apart from each other, they will\n    be averaged together, weighted by the vertex angle in each polygon."]}], "indent": 0, "text": ["Cusp Angle"], "role": "item", "attrs": {"id": "cuspangle"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["When set to ", {"text": ["By Vertex Angle"], "type": "ui"}, ", care is taken when computing normals to try to avoid issues introduced by sliver polygons and to weight contributions to normals by angle, so that triangulation won\u2019t change normals significantly.\n    When set to ", {"text": ["Each Vertex Equally"], "type": "ui"}, ", a faster, but less accurate, approach similar to the approach used by the ", {"text": ["Facet SOP"], "fullpath": "/nodes/sop/facet", "scheme": "Node", "type": "link", "value": "/nodes/sop/facet"}, ", is used to compute normals, where each vertex is given equal weight around a point, and less checks are done for ensuring stability.\n    When set to ", {"text": ["By Face Area"], "type": "ui"}, ", the behaviour is similar to __Each Vertex Equally_, except that vertices on faces with more area will be given more weight when computing point normals.  This is often used to fake the appearance of a smooth bevel for geometry with only a simple chamfer."]}], "indent": 0, "text": ["Weighting Method"], "role": "item", "attrs": {"id": "method"}, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/facet", "scheme": "Node", "type": "link", "value": "/nodes/sop/facet"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/vertex", "scheme": "Node", "type": "link", "value": "/nodes/sop/vertex"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "summary": ["Computes surface normal attribute."], "type": "root", "attrs": {"version": null, "tags": "vertex", "namespace": null, "bestbet": "normals", "internal": "normal", "context": "sop", "type": "node", "icon": "SOP/normal"}, "title": ["Normal"]}