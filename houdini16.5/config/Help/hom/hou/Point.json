{"body": [{"indent": 0, "text": [{"text": "hou.", "type": "supertitle"}, "Point"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Each Point object resides inside a Geometry object and stores a\n3D position.  Points may be shared between primitives (such as polygons), and\nthe set of points and primitives describes a 3D shape."]}, {"indent": 0, "type": "para", "text": ["The set of points may also store arbitrary data in the form of attributes,\nand each point instance stores a unique attribute value."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Return value stored in this point for a particular attribute.  The\n    attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object."]}, {"indent": 4, "type": "para", "text": ["Looking up an attribute value using a ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object is slightly\n    faster than looking it up by name.  When looking up attribute values inside\n    a loop, look up the ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object outside the loop, and pass it\n    into this method."]}, {"indent": 4, "type": "para", "text": ["Note that the point position attribute is named ", {"text": ["P"], "type": "code"}, " and is 4 floats in size.\n    This attribute always exists."]}, {"indent": 4, "type": "para", "text": ["When looking up the attribute values of all points, it is faster to call\n    ", {"fragment": "#pointFloatAttribValues", "text": "", "value": "/hom/hou/Geometry#pointFloatAttribValues", "fallback_text": "hou.Geometry.pointFloatAttribValues", "fullpath": "/hom/hou/Geometry#pointFloatAttribValues", "scheme": "Hom", "type": "link"}, " or\n    ", {"fragment": "#pointFloatAttribValuesAsString", "text": "", "value": "/hom/hou/Geometry#pointFloatAttribValuesAsString", "fallback_text": "hou.Geometry.pointFloatAttribValuesAsString", "fullpath": "/hom/hou/Geometry#pointFloatAttribValuesAsString", "scheme": "Hom", "type": "link"}, " than to call this method\n    for each point in the geometry."]}, {"indent": 4, "type": "para", "text": ["Raises ", {"text": "", "value": "/hom/hou/OperationFailed", "fallback_text": "hou.OperationFailed", "fullpath": "/hom/hou/OperationFailed", "scheme": "Hom", "type": "link"}, " if no attribute exists with this name."]}, {"lang": "python", "indent": 4, "type": "pre", "text": ["\n    # Create an object containing two SOPs: a box SOP wired into a color SOP.\n    geo_node = hou.node(\"/obj\").createNode(\"geo\")\n    box = geo_node.createNode(\"box\")\n    color = geo_node.createNode(\"color\")\n    color.setFirstInput(box)\n\n    # Grab the color SOP's geometry, get its first point, and print out the\n    # value of the Cd attribute.\n    geo = color.geometry()\n    point = geo.iterPoints()[0]\n    print point.attribValue(\"Cd\")\n\n    # Look up the Cd attribute and illustrate how to access the attribute\n    # value using the attribute object.\n    cd_attribute = geo.findPointAttrib(\"Cd\")\n    print point.attribValue(cd_attribute)\n    "]}], "indent": 0, "text": [{"text": ["attribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["int"], "type": "code"}, ", ", {"text": ["float"], "type": "code"}, ", ", {"text": ["str"], "type": "code"}, " or ", {"text": ["tuple"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::attribValue", "replaces": "/expressions/point /expressions/points /expressions/poppoint /expressions/poppointid"}, "type": "methods_item", "id": "attribValue"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the point attribute value for a particular floating point attribute.\n    The attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object."]}, {"indent": 4, "type": "para", "text": ["Raises ", {"text": "", "value": "/hom/hou/OperationFailed", "fallback_text": "hou.OperationFailed", "fullpath": "/hom/hou/OperationFailed", "scheme": "Hom", "type": "link"}, " if no attribute exists with this name\n    or the attribute is not float of size 1."]}, {"indent": 4, "type": "para", "text": ["In most cases, you\u2019ll just use ", {"fragment": "#attribValue", "text": "", "value": "/hom/hou/Point#attribValue", "fallback_text": "hou.Point.attribValue", "fullpath": "/hom/hou/Point#attribValue", "scheme": "Hom", "type": "link"}, " to access\n    attribute values.  Houdini uses this method internally to implement\n    attribValue."]}], "indent": 0, "text": [{"text": ["floatAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["float"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::floatAttribValue"}, "type": "methods_item", "id": "floatAttribValue"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the point attribute value for a particular floating point\n    attribute.  The attribute may be specified by name or by\n    ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  The return value is a tuple of floats."]}, {"indent": 4, "type": "para", "text": ["It is valid to call this method when the attribute\u2019s size is 1.  In this\n    case, a tuple with one element is returned."]}, {"indent": 4, "type": "para", "text": ["See also ", {"fragment": "#attribValue", "text": "", "value": "/hom/hou/Point#attribValue", "fallback_text": "hou.Point.attribValue", "fullpath": "/hom/hou/Point#attribValue", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["floatListAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": ["float"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::floatListAttribValue"}, "type": "methods_item", "id": "floatListAttribValue"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the point attribute value for a particular integer\n    attribute of size 1.  The attribute may be specified by name or by\n    ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  See ", {"fragment": "#floatAttribValue", "text": "", "value": "/hom/hou/Point#floatAttribValue", "fallback_text": "hou.Point.floatAttribValue", "fullpath": "/hom/hou/Point#floatAttribValue", "scheme": "Hom", "type": "link"}, " for more\n    information."]}], "indent": 0, "text": [{"text": ["intAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["int"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::intAttribValue"}, "type": "methods_item", "id": "intAttribValue"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the point attribute value for a particular integer attribute.  The\n    attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  The\n    return value is a tuple of ints.  See ", {"fragment": "#floatListAttribValue", "text": "", "value": "/hom/hou/Point#floatListAttribValue", "fallback_text": "hou.Point.floatListAttribValue", "fullpath": "/hom/hou/Point#floatListAttribValue", "scheme": "Hom", "type": "link"}, "\n    for more information."]}], "indent": 0, "text": [{"text": ["intListAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": ["int"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::intListAttribValue"}, "type": "methods_item", "id": "intListAttribValue"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the point attribute value for a particular string attribute.  The\n    attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  See\n    ", {"fragment": "#floatAttribValue", "text": "", "value": "/hom/hou/Point#floatAttribValue", "fallback_text": "hou.Point.floatAttribValue", "fullpath": "/hom/hou/Point#floatAttribValue", "scheme": "Hom", "type": "link"}, " for more information."]}], "indent": 0, "text": [{"text": ["stringAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::stringAttribValue"}, "type": "methods_item", "id": "stringAttribValue"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the point attribute value for a particular string attribute.  The\n    attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  The\n    return value is a tuple of strings."]}, {"indent": 4, "type": "para", "text": ["It is valid to call this method when the attribute\u2019s size is 1.  In this\n    case, a tuple with one element is returned."]}, {"indent": 4, "type": "para", "text": ["See also ", {"fragment": "#attribValue", "text": "", "value": "/hom/hou/Point#attribValue", "fallback_text": "hou.Point.attribValue", "fullpath": "/hom/hou/Point#attribValue", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["stringListAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::stringListAttribValue"}, "type": "methods_item", "id": "stringListAttribValue"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the position of this point as a Vector3 containing the (X, Y, Z)\n    position values."]}, {"indent": 4, "type": "para", "text": ["This method is a shortcut for accessing the ", {"text": ["P"], "type": "code"}, " attribute of the point."]}, {"lang": "python", "indent": 4, "type": "pre", "text": ["\n    point.position()\n    # is equivalent to\n    hou.Vector3(point.attribValue(\"P\"))\n    "]}, {"indent": 4, "type": "para", "text": ["Because the position is returned as a Vector3, it can be accessed as\n    a sequence.  However, you can also easily use ", {"text": "", "value": "/hom/hou/Matrix4", "fallback_text": "hou.Matrix4", "fullpath": "/hom/hou/Matrix4", "scheme": "Hom", "type": "link"}, " to\n    transform the position."]}, {"indent": 4, "type": "para", "text": ["See also:"]}, {"body": [{"indent": 4, "blevel": 6, "type": "bullet", "text": [{"fragment": "#weight", "text": "", "value": "/hom/hou/Point#weight", "fallback_text": "hou.Point.weight", "fullpath": "/hom/hou/Point#weight", "scheme": "Hom", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"text": "", "value": "/hom/hou/Vector3", "fallback_text": "hou.Vector3", "fullpath": "/hom/hou/Vector3", "scheme": "Hom", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"text": "", "value": "/hom/hou/Matrix4", "fallback_text": "hou.Matrix4", "fullpath": "/hom/hou/Matrix4", "scheme": "Hom", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "text": [{"text": ["position(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/Vector3", "fallback_text": "hou.Vector3", "fullpath": "/hom/hou/Vector3", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Point::position"}, "type": "methods_item", "id": "position"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the weight of this point.  Point weights are displayed in Houdini\u2019s\n    geometry spreadsheet as the fourth component of the position, and are\n    used in NURBS curves and surfaces."]}, {"indent": 4, "type": "para", "text": ["Most of the time, the weight is 1.0."]}, {"indent": 4, "type": "para", "text": ["This method is a shortcut for accessing the ", {"text": ["Pw"], "type": "code"}, " attribute of the point."]}, {"lang": "python", "indent": 4, "type": "pre", "text": ["\n    point.weight()\n    # is equivalent to\n    point.attribValue(\"Pw\")\n    "]}, {"indent": 4, "type": "para", "text": ["You can build a ", {"text": "", "value": "/hom/hou/Vector4", "fallback_text": "hou.Vector4", "fullpath": "/hom/hou/Vector4", "scheme": "Hom", "type": "link"}, " containing both the position and weight\n    as follows:"]}, {"lang": "python", "indent": 4, "type": "pre", "text": ["\n    hou.Vector4(tuple(point.position()) + (point.weight(),))\n    "]}, {"indent": 4, "type": "para", "text": ["See also ", {"fragment": "#position", "text": "", "value": "/hom/hou/Point#position", "fallback_text": "hou.Point.position", "fullpath": "/hom/hou/Point#position", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["weight(self)"], "type": "code"}, "  \u2192 ", {"text": ["float"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::weight"}, "type": "methods_item", "id": "weight"}, {"body": [{"indent": 4, "type": "para", "text": ["Store an attribute value in this point.  The attribute may be specified by\n    name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object, and must be an existing point attribute\n    in the geometry.  You would typically call this method from the code of a\n    Python-defined SOP."]}, {"indent": 4, "type": "para", "text": ["Raises ", {"text": "", "value": "/hom/hou/OperationFailed", "fallback_text": "hou.OperationFailed", "fullpath": "/hom/hou/OperationFailed", "scheme": "Hom", "type": "link"}, " if no attribute exists with this name\n    or if the attribute\u2019s data type does not match the value passed in.  If the\n    attribute\u2019s size is more than 1, the attribute value must be a sequence of\n    integers/floats, and the size of the sequence must match the attribute\u2019s\n    size."]}, {"indent": 4, "type": "para", "text": ["Raises ", {"text": "", "value": "/hom/hou/GeometryPermissionError", "fallback_text": "hou.GeometryPermissionError", "fullpath": "/hom/hou/GeometryPermissionError", "scheme": "Hom", "type": "link"}, " if this geometry is not modifiable."]}, {"indent": 4, "type": "para", "text": ["See ", {"fragment": "#addAttrib", "text": "", "value": "/hom/hou/Geometry#addAttrib", "fallback_text": "hou.Geometry.addAttrib", "fullpath": "/hom/hou/Geometry#addAttrib", "scheme": "Hom", "type": "link"}, " for an example."]}, {"indent": 4, "type": "para", "text": ["See also:"]}, {"body": [{"indent": 4, "blevel": 6, "type": "bullet", "text": [{"fragment": "#setAttribValue", "text": "", "value": "/hom/hou/Prim#setAttribValue", "fallback_text": "hou.Prim.setAttribValue", "fullpath": "/hom/hou/Prim#setAttribValue", "scheme": "Hom", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"fragment": "#setAttribValue", "text": "", "value": "/hom/hou/Vertex#setAttribValue", "fallback_text": "hou.Vertex.setAttribValue", "fullpath": "/hom/hou/Vertex#setAttribValue", "scheme": "Hom", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"fragment": "#setGlobalAttribValue", "text": "", "value": "/hom/hou/Geometry#setGlobalAttribValue", "fallback_text": "hou.Geometry.setGlobalAttribValue", "fullpath": "/hom/hou/Geometry#setGlobalAttribValue", "scheme": "Hom", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "text": [{"text": ["setAttribValue(self, name_or_attrib, attrib_value)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::setAttribValue"}, "type": "methods_item", "id": "setAttribValue"}, {"body": [{"indent": 4, "type": "para", "text": ["Changes the point\u2019s location.  You would typically call this method from\n    the code of a Python-defined SOP."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Any sequence of floats, such has a ", {"text": "", "value": "/hom/hou/Vector3", "fallback_text": "hou.Vector3", "fullpath": "/hom/hou/Vector3", "scheme": "Hom", "type": "link"}, " or a tuple of\n        floats, of length either 3 or 4.  The fourth coordinate corresponds to\n        the weight, and is usually 1.  The weight is typically used by NURBS\n        curves and sequences.  If the sequence is of size 3, the weight will be\n        unchanged."]}], "indent": 4, "type": "dt", "text": ["position"]}], "container": true, "type": "dt_group"}, {"indent": 4, "type": "para", "text": ["This method is a shortcut for calling ", {"fragment": "#setAttribValue", "text": "", "value": "/hom/hou/Point#setAttribValue", "fallback_text": "hou.Point.setAttribValue", "fullpath": "/hom/hou/Point#setAttribValue", "scheme": "Hom", "type": "link"}, " on\n    the ", {"text": ["P"], "type": "code"}, " attribute."]}, {"lang": "python", "indent": 4, "type": "pre", "text": ["\n    point.setPosition((x, y, z))\n    # is the same as\n    point.setAttribValue(\"P\", (x, y, z))\n    "]}, {"indent": 4, "type": "para", "text": ["Raises ", {"text": "", "value": "/hom/hou/GeometryPermissionError", "fallback_text": "hou.GeometryPermissionError", "fullpath": "/hom/hou/GeometryPermissionError", "scheme": "Hom", "type": "link"}, " if the geometry is not modifiable.\n    Raises ", {"text": "", "value": "/hom/hou/InvalidSize", "fallback_text": "hou.InvalidSize", "fullpath": "/hom/hou/InvalidSize", "scheme": "Hom", "type": "link"}, " if the length of ", {"text": ["position"], "type": "code"}, " is not 3."]}, {"indent": 4, "type": "para", "text": ["See also ", {"fragment": "#setWeight", "text": "", "value": "/hom/hou/Point#setWeight", "fallback_text": "hou.Point.setWeight", "fullpath": "/hom/hou/Point#setWeight", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["setPosition(self, position)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::setPosition"}, "type": "methods_item", "id": "setPosition"}, {"body": [{"indent": 4, "type": "para", "text": ["Change the point\u2019s weight.  You would typically call this method from\n    the code of a Python-defined SOP."]}, {"indent": 4, "type": "para", "text": ["This method is a shortcut for calling ", {"fragment": "#setAttribValue", "text": "", "value": "/hom/hou/Point#setAttribValue", "fallback_text": "hou.Point.setAttribValue", "fullpath": "/hom/hou/Point#setAttribValue", "scheme": "Hom", "type": "link"}, " on\n    the ", {"text": ["Pw"], "type": "code"}, " attribute."]}, {"indent": 4, "type": "para", "text": ["See ", {"fragment": "#weight", "text": "", "value": "/hom/hou/Point#weight", "fallback_text": "hou.Point.weight", "fullpath": "/hom/hou/Point#weight", "scheme": "Hom", "type": "link"}, " for more information about a point\u2019s weight.\n    See also ", {"fragment": "#setPosition", "text": "", "value": "/hom/hou/Point#setPosition", "fallback_text": "hou.Point.setPosition", "fullpath": "/hom/hou/Point#setPosition", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["setWeight(self, weight)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::setWeight"}, "type": "methods_item", "id": "setWeight"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the enumerated value ", {"fragment": "#Point", "text": "", "value": "/hom/hou/attribType#Point", "fallback_text": "hou.attribType.Point", "fullpath": "/hom/hou/attribType#Point", "scheme": "Hom", "type": "link"}, ".  Points,\n    primitives, vertices, and geometry support the same set of methods for\n    querying their attributes, and this method is one of them."]}, {"indent": 4, "type": "para", "text": ["See also:"]}, {"body": [{"indent": 4, "blevel": 6, "type": "bullet", "text": [{"fragment": "#attribType", "text": "", "value": "/hom/hou/Prim#attribType", "fallback_text": "hou.Prim.attribType", "fullpath": "/hom/hou/Prim#attribType", "scheme": "Hom", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"fragment": "#attribType", "text": "", "value": "/hom/hou/Vertex#attribType", "fallback_text": "hou.Vertex.attribType", "fullpath": "/hom/hou/Vertex#attribType", "scheme": "Hom", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"fragment": "#attribType", "text": "", "value": "/hom/hou/Geometry#attribType", "fallback_text": "hou.Geometry.attribType", "fullpath": "/hom/hou/Geometry#attribType", "scheme": "Hom", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"text": "", "value": "/hom/hou/attribType", "fallback_text": "hou.attribType", "fullpath": "/hom/hou/attribType", "scheme": "Hom", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "text": [{"text": ["attribType(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/attribType", "fallback_text": "hou.attribType", "fullpath": "/hom/hou/attribType", "scheme": "Hom", "type": "link"}, " enum value"], "role": "item", "attrs": {"cppname": "HOM_Point::attribType"}, "type": "methods_item", "id": "attribType"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the ", {"text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object containing this point."]}], "indent": 0, "text": [{"text": ["geometry(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Point::geometry"}, "type": "methods_item", "id": "geometry"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the number of this point.  Points are numbered sequentially\n    starting from 0, and the points returned by ", {"fragment": "#points", "text": "", "value": "/hom/hou/Geometry#points", "fallback_text": "hou.Geometry.points", "fullpath": "/hom/hou/Geometry#points", "scheme": "Hom", "type": "link"}, "\n    are in order by their number."]}], "indent": 0, "text": [{"text": ["number(self)"], "type": "code"}, "  \u2192 ", {"text": ["int"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::number", "replaces": "/expressions/pointlist /expressions/poppointnum"}, "type": "methods_item", "id": "number"}, {"body": [], "indent": 0, "text": [{"text": ["transform(self, matrix)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::transform"}, "type": "methods_item", "id": "transform"}, {"body": [], "indent": 0, "text": [{"text": ["destroy(self)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::destroy"}, "type": "methods_item", "id": "destroy"}, {"body": [], "indent": 0, "text": [{"text": ["closestPrim(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/Prim", "fallback_text": "hou.Prim", "fullpath": "/hom/hou/Prim", "scheme": "Hom", "type": "link"}, " or ", {"text": ["None"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::closestPrim"}, "type": "methods_item", "id": "closestPrim"}, {"body": [], "indent": 0, "text": [{"text": ["minDistanceToPrim(self, prim)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::minDistanceToPrim", "replaces": "/expressions/pointdist"}, "type": "methods_item", "id": "minDistanceToPrim"}, {"body": [], "indent": 0, "text": [{"text": ["pointsOnPrimsSharingThisPoint(self, num_prims)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": "", "value": "/hom/hou/Point", "fallback_text": "hou.Point", "fullpath": "/hom/hou/Point", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::pointsOnPrimsSharingThisPoint", "replaces": "/expressions/pointneighbours"}, "type": "methods_item", "id": "pointsOnPrimsSharingThisPoint"}, {"body": [], "indent": 0, "text": [{"text": ["uvOfClosestLocationOnPrim(self, prim)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::uvOfClosestLocationOnPrim"}, "type": "methods_item", "id": "uvOfClosestLocationOnPrim"}, {"body": [], "indent": 0, "text": [{"text": ["hasCollided(self)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::hasCollided", "replaces": "/expressions/iscollided"}, "type": "methods_item", "id": "hasCollided"}, {"body": [], "indent": 0, "text": [{"text": ["isStuck(self)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::isStuck", "replaces": "/expressions/isstuck"}, "type": "methods_item", "id": "isStuck"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 1, "text": "Methods", "role": "section", "container": true, "type": "methods_section", "id": "methods"}], "summary": ["Each Point object resides inside a Geometry object and stores a\n3D position.  Points may be shared between primitives (such as polygons), and\nthe set of points and primitives describes a 3D shape."], "type": "root", "attrs": {"cppname": "HOM_Point", "type": "homclass", "group": "geo"}, "title": [{"text": "hou.", "type": "supertitle"}, "Point"]}