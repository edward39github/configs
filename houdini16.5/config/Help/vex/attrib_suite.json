{"body": [{"indent": 0, "text": ["Reading attributes"], "type": "title", "level": 0}, {"body": [{"body": [{"indent": 0, "type": "para", "text": ["These functions return the attribute value if the given detail/primitive/point/vertex exists and has the given attribute, or a zero/empty value otherwise."]}, {"indent": 0, "type": "para", "text": ["If you need to distinguish between the attribute value actually being zero/empty vs. the function returning zero/empty value because the attribute didn\u2019t exist, use the ", {"fragment": "#checked", "text": ["checked versions"], "value": "#checked", "fullpath": "/vex/attrib_suite#checked", "scheme": null, "type": "link"}, " below."]}, {"body": [{"indent": 0, "role": "item", "type": "suite_item", "text": [{"text": "", "value": "/vex/functions/attrib", "fallback_text": "attrib()", "fullpath": "/vex/functions/attrib", "scheme": "Vex", "type": "link"}]}, {"indent": 0, "role": "item", "type": "suite_item", "text": [{"text": "", "value": "/vex/functions/detail", "fallback_text": "detail()", "fullpath": "/vex/functions/detail", "scheme": "Vex", "type": "link"}]}, {"indent": 0, "role": "item", "type": "suite_item", "text": [{"text": "", "value": "/vex/functions/prim", "fallback_text": "prim()", "fullpath": "/vex/functions/prim", "scheme": "Vex", "type": "link"}]}, {"indent": 0, "role": "item", "type": "suite_item", "text": [{"text": "", "value": "/vex/functions/point", "fallback_text": "point()", "fullpath": "/vex/functions/point", "scheme": "Vex", "type": "link"}]}, {"indent": 0, "role": "item", "type": "suite_item", "text": [{"text": "", "value": "/vex/functions/vertex", "fallback_text": "vertex()", "fullpath": "/vex/functions/vertex", "scheme": "Vex", "type": "link"}]}], "container": true, "role": "item_group", "type": "suite_item_group"}], "indent": 0, "level": 2, "text": ["Without existence check"], "container": true, "type": "h", "id": "unchecked"}, {"body": [{"indent": 0, "type": "para", "text": ["These functions take an additional argument. The functions will overwrite the integer variable you pass to this argument with ", {"text": ["1"], "type": "code"}, " if the read succeeded or ", {"text": ["0"], "type": "code"}, " if it failed. This lets you distinguish when the function returns ", {"text": ["0"], "type": "code"}, " because the attribute value is actually zero, or because the read failed."]}, {"indent": 0, "type": "para", "text": ["If it doesn\u2019t matter in your code whether the attribute doesn\u2019t exist or is actually ", {"text": ["0"], "type": "code"}, ", using the ", {"fragment": "#unchecked", "text": ["unchecked versions"], "value": "#unchecked", "fullpath": "/vex/attrib_suite#unchecked", "scheme": null, "type": "link"}, " above is slightly easier because you don\u2019t have to create the variable to overwrite."]}, {"body": [{"indent": 0, "role": "item", "type": "suite_item", "text": [{"text": "", "value": "/vex/functions/getattrib", "fallback_text": "getattrib()", "fullpath": "/vex/functions/getattrib", "scheme": "Vex", "type": "link"}]}, {"indent": 0, "role": "item", "type": "suite_item", "text": [{"text": "", "value": "/vex/functions/detailattrib", "fallback_text": "detailattrib()", "fullpath": "/vex/functions/detailattrib", "scheme": "Vex", "type": "link"}]}, {"indent": 0, "role": "item", "type": "suite_item", "text": [{"text": "", "value": "/vex/functions/primattrib", "fallback_text": "primattrib()", "fullpath": "/vex/functions/primattrib", "scheme": "Vex", "type": "link"}]}, {"indent": 0, "role": "item", "type": "suite_item", "text": [{"text": "", "value": "/vex/functions/pointattrib", "fallback_text": "pointattrib()", "fullpath": "/vex/functions/pointattrib", "scheme": "Vex", "type": "link"}]}, {"indent": 0, "role": "item", "type": "suite_item", "text": [{"text": "", "value": "/vex/functions/vertexattrib", "fallback_text": "vertexattrib()", "fullpath": "/vex/functions/vertexattrib", "scheme": "Vex", "type": "link"}]}], "container": true, "role": "item_group", "type": "suite_item_group"}], "indent": 0, "level": 2, "text": ["With existence check"], "container": true, "type": "h", "id": "checked"}], "indent": 0, "level": 1, "text": "Suite", "role": "section", "container": true, "type": "suite_section", "id": "suite"}, {"body": [{"lang": "vex", "indent": 0, "type": "pre", "text": ["\n// Get the value of the \"uv\" attribute for the detail.\nvector uv = detail(\"defgeo.bgeo\", \"uv\");\n"]}, {"lang": "vex", "indent": 0, "type": "pre", "text": ["\n// Get the value of the \"Cd\" attribute for primitive 7\n// in the SOP specified by the path \"/obj/geo1/color1\" (Houdini\n// only)\nvector clr = prim(\"op:/obj/geo1/color1\", \"Cd\", 7);\n"]}, {"lang": "vex", "indent": 0, "type": "pre", "text": ["\n// Get the position of point 3 in \"defgeo.bgeo\"\nvector pos = point(\"defgeo.bgeo\", \"P\", 3);\n"]}, {"lang": "vex", "indent": 0, "type": "pre", "text": ["\n// Get the value of the \"uv\" attribute for vertex 2 of primitive\n// number 3 in the file defgeo.bgeo\nvector uv = vertex(\"defgeo.bgeo\", \"uv\", 3, 2);\n"]}], "indent": 0, "level": 1, "text": "Examples", "role": "section", "container": true, "type": "examples_section", "id": "examples"}], "type": "root", "attrs": {"type": "vexsuite"}, "title": ["Reading attributes"]}