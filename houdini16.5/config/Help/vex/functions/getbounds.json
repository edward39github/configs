{"body": [{"indent": 0, "text": ["getbounds"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Returns the bounding box of the geometry specified by the filename."]}, {"body": [{"indent": 0, "role": "item", "type": "usage", "text": [" ", {"text": ["int getbounds(string filename, vector &min, vector &max)"], "type": "code"}]}, {"indent": 0, "role": "item", "type": "usage", "text": [" ", {"text": ["int getbounds(string filename, string group, vector &min, vector &max)"], "type": "code"}]}], "container": true, "role": "item_group", "type": "usage_group"}, {"indent": 0, "type": "para", "text": ["Returns the bounding box of the geometry specified by the filename. The\npoint corresponding to the minimum corner of the bounding box will be\nreturned in ", {"text": ["min"], "type": "var"}, ", while the maximum will be in ", {"text": ["max"], "type": "var"}, ".\nAlways returns 1."]}, {"indent": 0, "type": "para", "text": ["If a group is specified, only primitives in that group will be used.\nThe group field\u2019s behavior matches that in SOPs.  An empty string\nwill include all primitives.  Ad-hoc patterns like ", {"text": ["0-10"], "type": "code"}, " and\n", {"text": ["@Cd.x>0"], "type": "code"}, " are also valid."]}, {"indent": 0, "type": "para", "text": ["The ", {"text": ["getbbox()"], "type": "code"}, " function should likely be used instead."]}], "summary": ["Returns the bounding box of the geometry specified by the filename."], "type": "root", "attrs": {"showtags": "true", "group": "measure", "type": "vex", "context": "all", "tags": "bbox, measure"}, "title": ["getbounds"]}