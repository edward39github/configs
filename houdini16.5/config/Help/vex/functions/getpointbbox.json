{"body": [{"indent": 0, "text": ["getpointbbox"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Sets two vectors to the minimum and maximum corners of the bounding box for the geometry."]}, {"body": [{"indent": 0, "role": "item", "type": "usage", "text": [" ", {"text": ["void getpointbbox(<geometry>, vector &min, vector &max)"], "type": "code"}]}, {"body": [{"indent": 4, "type": "para", "text": ["This is the same as ", {"text": "", "value": "/vex/functions/getbbox", "fallback_text": "getbbox()", "fullpath": "/vex/functions/getbbox", "scheme": "Vex", "type": "link"}, " except it only computes the bounding box of the ", {"text": ["points"], "type": "em"}, ". So if a primitive has extents that don\u2019t have points (for example, the boundary of a primitive sphere), they will not be included in the box."]}], "indent": 0, "role": "item", "type": "usage", "text": [" ", {"text": ["void getpointbbox(<geometry>, string pointgroup, vector &min, vector &max)"], "type": "code"}]}], "container": true, "role": "item_group", "type": "usage_group"}, {"body": [{"body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"text": [".bgeo"], "type": "code"}, ") to read from. When running inside Houdini, this can be an ", {"text": ["op:/path/to/sop"], "type": "code"}, " reference."]}], "indent": 0, "text": [{"text": ["<geometry>"], "type": "code"}], "role": "item", "attrs": {"id": "geometry"}, "type": "arg"}], "container": true, "role": "item_group", "type": "arg_group"}], "title": ["getpointbbox"], "summary": ["Sets two vectors to the minimum and maximum corners of the bounding box for the geometry."], "attrs": {"showtags": "true", "group": "measure", "type": "vex", "context": "all", "tags": "bbox, measure"}, "included": ["/vex/functions/_common"], "type": "root"}